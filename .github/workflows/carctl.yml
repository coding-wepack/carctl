# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: carctl

on:
  push:
    branches: [ 'main' ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ 'main' ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Get OS name
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            echo "OS_NAME=linux" >> $GITHUB_ENV
          elif [ "${{ runner.os }}" == "macOS" ]; then
            echo "OS_NAME=darwin" >> $GITHUB_ENV
          elif [ "${{ runner.os }}" == "Windows" ]; then
            echo "OS_NAME=windows" >> $GITHUB_ENV
          fi

      - name: Build Only
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: |
          ./build.sh

      - name: Build And Push
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          VERSION=${{ github.ref_name }} ./build.sh
          curl -ifT carctl -u ${{ secrets.CODING_PUBLIC_REGISTRY_PROJECT_TOKEN_USERNAME }}:${{ secrets.CODING_PUBLIC_REGISTRY_PROJECT_TOKEN_PASSWORD }} \
            "https://coding-public-generic.pkg.coding.net/registry/disk/carctl/${{ env.OS_NAME }}/amd64/carctl?version=latest"
          curl -ifT carctl -u ${{ secrets.CODING_PUBLIC_REGISTRY_PROJECT_TOKEN_USERNAME }}:${{ secrets.CODING_PUBLIC_REGISTRY_PROJECT_TOKEN_PASSWORD }} \
            "https://coding-public-generic.pkg.coding.net/registry/disk/carctl/${{ env.OS_NAME }}/amd64/carctl?version=1.0.0"
